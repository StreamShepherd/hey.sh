#!/bin/bash
message="$@"
timestamp=$(date "+%H%M")
today=$(date "+%y%m%d")

# Set the HEY_GIT directory
logfile="$HEY_GIT/$today.md"

# If no message autocommit
if [ -z "$message" ]; then
  git add .
  message=$(git status; git diff --staged)
  message=$(echo "$message" | bash $chat "You are in a terminal, ONLY summarize git changes as a single line commit message. Dont acknowledge ONLY output commit message. Dont wrap in quotes, do not escape or add markup. Begin with todays date: $today " | tr -d '\n')
  echo -e $BGBLUE"$message"$CLEAR
fi

# Ask if should commit
echo -e $MAGENTA"Should the message be committed ([Y]es / [n]o / [r]egenerate)?"$CLEAR
read -r should_commit

# Default to yes if empty
if [ -z "$should_commit" ] || [[ "$should_commit" =~ ^[Yy] ]]; then
  git commit -m "$message"
  commit_status=$?
  
  if [ $commit_status -eq 0 ]; then
    git push
    echo -e "$GREEN Commit successful! $RESET"
    
    # Log the file after successful commit
    repo=$(git remote get-url origin | awk -F: '{print $2}')
    if [ -f "$logfile" ]; then
      echo "$timestamp <$repo> $message" >> "$logfile"
    else
      echo -e $RED"TODAYS DAILY LOG DOES NOT EXIST YET;\n$GREEN However, COMMIT SUCCESSFUL. $YELLOW MESSAGE ADDED TO $TEAL xsel -ib $YELLOW INSTEAD $RESET"
      echo "$timestamp <$repo> $message" | xsel -ib
    fi
  else
      echo -e "$RED Commit failed! $RESET"
  fi
elif [[ "$should_commit" =~ ^[Rr] ]]; then
  echo -e "$YELLOW Regenerating commit message... $RESET"
  # Add regeneration logic here
else
  echo -e "$YELLOW Commit cancelled. $RESET"
fi
